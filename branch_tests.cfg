[Global]
parallel: true
recover: 4
openstack_flavor_name: UNIVENTION-4V-4-20s
extra_label: kelvin-client-branch-test-[ENV:LABEL_SUFFIX]

environment:
 TARGET_VERSION=[ENV:TARGET_VERSION]

[singleserver]
openstack_image_name: [ENV:TARGET_VERSION]-dev-ucsschool-singleserver
command1:
# Setup
 . utils.sh && add_tech_key_authorized_keys
 . utils.sh && basic_setup
 . utils.sh && upgrade_to_latest_patchlevel
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
 . utils.sh && assert_join
# Install kelvin
  ucr set tests/domainadmin/account=Administrator
  ucr set tests/domainadmin/pwdfile=/tmp/pwdfile
  echo "univention" > /tmp/pwdfile
 . utils.sh && install_apps ucsschool-kelvin-rest-api
  univention-app configure ucsschool-kelvin-rest-api --set ucsschool/kelvin/log_level=DEBUG
# Setup environment
 LOCAL rsync -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" -r . root@[SELF_IP]:/root/kelvin-rest-api-client
 /usr/share/ucs-school-import/scripts/create_ou DEMOSCHOOL; /usr/share/ucs-school-import/scripts/create_ou DEMOSCHOOL2
 mkdir -p /etc/ucsschool/kelvin
 echo '{"user": ["title"], "school_class": ["mailAddress"], "school": ["description"]}' > /etc/ucsschool/kelvin/mapped_udm_properties.json
 univention-app restart ucsschool-kelvin-rest-api
 univention-install -y python3-venv sshpass
 python3 -m venv venv
 venv/bin/python3 -m pip install --upgrade pip wheel
 venv/bin/python3 -m pip install pytest-cov
 venv/bin/python3 -m pip install -r kelvin-rest-api-client/requirements.txt -r kelvin-rest-api-client/requirements_dev.txt -r kelvin-rest-api-client/requirements_test.txt
 venv/bin/python3 -m pip list
 mkdir -pv /root/test-reports
 sed -e "s/10.20.30.40/$(python3 -c 'import socket; print(socket.gethostbyname(socket.gethostname()))')/g" -e "s/dc=example,dc=com/$(ucr get ldap/base)/g" -e "s/s3cr3t/univention/g" kelvin-rest-api-client/tests/test_server_example.yaml > kelvin-rest-api-client/tests/test_server.yaml
 venv/bin/python3 -m pip install -e kelvin-rest-api-client
 cd kelvin-rest-api-client && /root/venv/bin/python3 -m pytest -l -v --cov=tests --cov=ucsschool --cov-report=term-missing --junit-xml=/root/test-reports/01_kelvin_client_test.xml --junit-prefix=99_kelvin_client || true
 echo -e 'import subprocess\ndef test_coverage():\n  subprocess.run(["/root/venv/bin/coverage", "report", "--show-missing", "--fail-under=90"], check=True)' > kelvin-rest-api-client/test_coverage.py
 cd kelvin-rest-api-client && /root/venv/bin/python3 -m pytest -l -s -v --junit-xml=/root/test-reports/02_kelvin_client_coverage.xml --junit-prefix=99_kelvin_client test_coverage.py || true

command2:
# Collect results
 . utils.sh && prepare_results
 LOCAL /usr/lib/python3/dist-packages/univention/ec2/utils/utils-local.sh fetch-results [SELF_IP] results/[SELF]
